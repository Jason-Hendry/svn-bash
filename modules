
modis() {
  local mod=`echo \`pwd\` | sed s/^.*\\\/modules\\\/optional\\\/\[^\\\/\]*$// | sed s/^.*\\\/modules\\\/custom\\\/\[^\\\/\]*$// | sed s/^.*\\\/modules\\\/core$//`
  if [ -n "$mod" ]; then
    return 1
  fi
  return 0
}

modsw() {
  local path=`svn info | grep URL: | cut -d\  -f2 | sed s/svn:\\\/\\\/svn\[\-a-z\]*\.pre/^/ | sed s/\\\/\[^\\\/\]*$/\\\/$1/`
  svn switch $path
}
modro() {
  svn switch --relocate svn://svn.pre svn://svn-readonly.pre
  modsw $1
}
modrw() {
  svn switch --relocate svn://svn-readonly.pre svn://svn.pre
  modsw $1
}
modup() {
#  if [ -n modis ]; then
#    echo "modup can only be from from a submodule folder"
#    return 1
#  fi
  local mod=`basename \`pwd\``
  local exts=`svn propget svn:externals ../`

  local modext=`echo -e "$exts" | \
    sed s/\\\/$mod\\\/\[^\\\/\]*$/\\\/$mod\\\/$1/ | \
    sed s/^$mod\ svn:\\\/\\\/svn.pre/$mod\ svn:\\\/\\\/svn-readonly.pre/ `
  echo -e "$modext" | svn propset svn:externals --file - ../
  
  ## Show Diff
  echo -e "$exts" > .__ext1.tmp
  echo -e "$modext" > .__ext2.tmp
  local changes=`diff .__ext1.tmp .__ext2.tmp`
  echo -e "$changes"
  rm .__ext1.tmp .__ext2.tmp
  if [ -n "$changes" ]; then
    if [ "$2" = "-c" ]; then
      svn commit --depth empty -m "Update $mod to version $1" ../
    fi
    ## Switch to version without needing to run update 
    modro $1
  fi
}

modlatest() {
   local path=`svn info | grep URL: | cut -d\  -f2 |  sed s/\\\/\[^\\\/\]*$/\\\//`
   svn ls $path | sed -e "s/\./\.0000000000/;s/^\([0-9]\{1,\}\)\.0*\([0-9]\{10\}\)\/$/\1.\2/" | grep "^[0-9]*\.[0-9]*$" | sort -g | tail -n 1 | sed "s/^\([0-9]*\)\.0*\([0-9]*\)$/\1.\2/"
}

modversion() {
   local version=`svn info | grep URL: | cut -d\  -f2 |  sed "s/^.*\\\/\([^\\\/]*\)$/\1/"`
   echo "$version(current) -> `modlatest`(latest)"
}

modadd() {
  ext=`svn propget svn:externals .`
  ext=`printf "%s\n%s svn://svn-readonly.pre/taipan/modules/optional/%s/%s" "$ext" "$1" "$1" "$2"|sort`
  ext=`svn propset svn:externals "$ext" .`
  if [ "$3" = "-c" ]; then
     svn commit --depth empty . -m "Added Module: $1 v$2"
  fi
}

modnew() {
  svn mkdir svn://svn.pre/taipan/modules/optional/$1 -m "Create new module: $1"
  svn mkdir svn://svn.pre/taipan/modules/optional/$1/trunk -m "Create trunk branch"
  modadd $1 trunk
  svn update
  cd $1
  modrw $1 trunk
}